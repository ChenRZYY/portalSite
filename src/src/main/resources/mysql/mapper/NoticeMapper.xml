<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zy.news.web.mapper.NoticeMapper">
  <resultMap id="BaseResultMap" type="zy.news.web.bean.Notice">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="ntid" jdbcType="BIGINT" property="ntid" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="publisdate" jdbcType="TIMESTAMP" property="publisdate" />
    <result column="reviewstatus" jdbcType="TINYINT" property="reviewstatus" />
    <result column="reviewer" jdbcType="VARCHAR" property="reviewer" />
    <result column="reviewdate" jdbcType="TIMESTAMP" property="reviewdate" />
    <result column="pageview" jdbcType="BIGINT" property="pageview" />
    <result column="content" jdbcType="LONGVARBINARY" property="content" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_notice
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="zy.news.web.bean.Notice">
    insert into t_notice (id, title, ntid, 
      author, publisdate, reviewstatus, 
      reviewer, reviewdate, pageview, 
      content)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{ntid,jdbcType=BIGINT}, 
      #{author,jdbcType=VARCHAR}, #{publisdate,jdbcType=TIMESTAMP}, #{reviewstatus,jdbcType=TINYINT}, 
      #{reviewer,jdbcType=VARCHAR}, #{reviewdate,jdbcType=TIMESTAMP}, #{pageview,jdbcType=BIGINT}, 
      #{content,jdbcType=LONGVARBINARY})
  </insert>
  <update id="updateByPrimaryKey" parameterType="zy.news.web.bean.Notice">
    update t_notice
    set title = #{title,jdbcType=VARCHAR},
      ntid = #{ntid,jdbcType=BIGINT},
      author = #{author,jdbcType=VARCHAR},
      publisdate = #{publisdate,jdbcType=TIMESTAMP},
      reviewstatus = #{reviewstatus,jdbcType=TINYINT},
      reviewer = #{reviewer,jdbcType=VARCHAR},
      reviewdate = #{reviewdate,jdbcType=TIMESTAMP},
      pageview = #{pageview,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, title, ntid, author, publisdate, reviewstatus, reviewer, reviewdate, pageview, 
    content
    from t_notice
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, title, ntid, author, publisdate, reviewstatus, reviewer, reviewdate, pageview, 
    content
    from t_notice
  </select>
</mapper>